
; SCOREBOARD FOR PAL-1
; BUTTONS 6 AND 7 INC/DEC ENEMY SCORE
; BUTTONS 2 AND 3 INC/DEC FRIENDS SCORE

; ASSEMBLED USING A65 ASSEMBLER
; TO COMPILE IN LINUX (AS PER MARK ABENE)
; ln -s a65.h A65.H
; gcc -I. -o a65 a65.c a65util.c a65eval.c
; THEN CREATE THE FOLLOWING FILE: ASM65 WITH CONTENTS
; (BE SURE dos2unix IS INSTALLED)
; -----------------------------------------------------
; #!/bin/bash
; ./a65 $1.asm -l $1.lst -o $1.hex 
; srec_cat $1.hex -intel -o $1.mos -MOS_Technologies
; unix2dos $1.mos
; -----------------------------------------------------
; THEN chmod +x ASM65 to make it executable
; THIS SCRIPT PUTS THE FILE INTO PAPER TAPE FORMAT
; IN THE KIM MONITOR, USE THE "L" COMMAND TO LOAD PAPER TAPE
; JUST PAST THE OUTPUT OF YOUR SCRIPT (*.mos) INTO TERMINAL.
                        
; -- Ricky Bryce

SCANDS: EQU $1F1F
GETKEY: EQU $1F6A
EXIT:   EQU $1C64


	ORG $0200	; PAL-1 STARTS AT 0200H

RESTART:
	LDA #$00	; LOAD 0 TO ACCUMULATOR
	STA $F9		; STORE TO RIGHTMOST DISPLAY
	STA $FB		; STORE TO LEFTMOST DISPLAY
	LDA #$EF	; LOAD EFH TO ACCUMULATOR
	STA $FA		; PLACE EF ON CENTER DISPLAY (ENEMY/FRIEND)
	LDA #00		; LOAD ZERO BACK TO ACCUMULATOR

MAIN:

	JSR SCANDS  ; SCANDS SCANS THE DISPLAY
	JSR GETKEY  ; GETKEY GETS USER INPUT FROM KEYPAD
	CMP #$0E	; SEE IF THE USER PRESSED "E"
	BNE CONT	; IF NOT, THEN CONTINUE
	JMP EXIT	; IF SO, THEN EXIT TO KIM MONITOR
CONT:
	CMP #$07	; SEE IF HE PRESSED 7
	BEQ INVIS	; IF SO, INCREMENT VISITORS SCORE
	CMP #$06	; DID HE PRESS 6?
	BEQ DEVIS	; IF SO, DECEMENT VISITOR SCORE
	CMP #$03	; DID HE PRESS 3?
	BEQ INHM	; IF SO, INCREMENT HOME SCORE
	CMP #$02	; DID HE PRESS 2:
	BEQ DEHM	; IF SO, DECREMENT HOME TEAM SCORE
	CMP #$00	; DID HE PRESS 0?
	BEQ RESTART ; IF SO, RESTART PROGRAM
	JMP MAIN	; JUMP BACK TO MAIN

INVIS:	; INCREMENT THE VISITOR SCORE
	CLC			; CLEAR THE CARRY BIT
	SED			; THEN SET DECIMAL MODE
	LDA #$01	; LOAD 1 TO ACCUMULATOR
	ADC $FB		; ADD THIS TO LEFT DISPLAY BUFFER
	STA $FB		; THEN STORE THE NEW NUMBER
	CLD			; CLEAR THE DECIMAL FLAG
	JMP WAIT	; GO TO MAIN

DEVIS: 	; DECREMENT THE VISITOR SCORE
	SED			; SET DECIMAL MODE
	LDA $FB		; LOAD THE RIGHT DISPLAY BUFFER
	SEC			; SET THE CARRY BIT
	SBC #$01	; SUBTRACT 1
	STA $FB		; THEN STORE THE ANSWER
	CLC			; CLEAR THE CARRY FLAG
	CLD			; CLEAR DECIMAL MODE
	JMP WAIT	; JUMP TO MAIN

INHM:	; INCREMENT THE HOME TEAM SCORE
	CLC			; CLEAR THE CARRY BIT
	SED			; SET DECIMAL MODE
	LDA #$01	; LOAD 1 TO ACCUMULATOR
	ADC $F9		; ADD 1 TO RIGHT BUFFER
	STA $F9		; STORE THIS BACK TO BUFFER
	CLD			; CLEAR DECIMAL MODE
	JMP WAIT	; JUMP TO MAIN

DEHM: 	; DECREMENT THE HOME TEAM SCORE 
	SED			; SET DECIMAL MODE
	LDA $F9		; LOAD RIGHT DISPLAY BUFFER
	SEC			; SET THE CARRY FLAG
	SBC #$01	; SUBTRACT 1 FROM BUFFER
	STA $F9		; STORE THE ANSWER BACK TO BUFFER
	CLC			; CLEAR THE CARRY FLAG
	CLD			; CLEAR DECIMAL MODE
	JMP WAIT	; BACK TO MAIN
	
WAIT:	; AVOID DOUBLE COUNTS, BUT ALLOW REPEATS ON PAL-1
	LDA	#$80		; ABOUT QUARTER SECOND
	STA WAITTIME1	; STORE TO LOOP1
WAIT1:
	DEC WAITTIME1	; DECREMENT INNER LOOP
	;LDA	#$80		; ADDITIONAL TIME IF DESIRED
	;STA WAITTIME2		; STORE SECOND LOOP TIME IF USED
	JSR SCANDS		; SCAN THE DISPLAY
WAIT2:
	;DEC WAITTIME2		; DECREMENT SECOND WAIT TIME
	;BNE WAIT2			; LOOP UNTIL WAITTIME2=0
	
	LDA WAITTIME1	; LOAD CURRENT WAITIME 1
	BNE WAIT1		; IF NOT YET ZERO, STAY IN LOOP
	
	JMP MAIN		; BACK TO MAIN


WAITTIME1:	DB	00H
WAITTIME2:	DB	00H
	END
